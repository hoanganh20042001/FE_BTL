{"ast":null,"code":"import _toConsumableArray from \"/home/hoanganh/Desktop/MTAlock/MTAlock/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/home/hoanganh/Desktop/MTAlock/MTAlock/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/hoanganh/Desktop/MTAlock/MTAlock/Client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/hoanganh/Desktop/MTAlock/MTAlock/Client/src/component/general/checkBoxGroup.jsx\";\nimport React from \"react\";\nimport { Text, Checkbox } from \"@mantine/core\";\nimport { useListState } from \"@mantine/hooks\";\nimport \"../../css/filterForm.css\";\nexport default function CheckBoxes(_ref) {\n  var _this = this;\n  var items = _ref.items,\n    label = _ref.label,\n    filters = _ref.filters,\n    setFilters = _ref.setFilters,\n    uncheck = _ref.uncheck,\n    setUnCheck = _ref.setUnCheck,\n    badgeValue = _ref.badgeValue,\n    type = _ref.type;\n  var _useListState = useListState(items),\n    _useListState2 = _slicedToArray(_useListState, 2),\n    values = _useListState2[0],\n    handlers = _useListState2[1];\n  React.useEffect(function () {\n    if (uncheck) {\n      handlers.setState(function (current) {\n        return current.map(function (value) {\n          return _objectSpread({}, value, {\n            checked: false\n          });\n        });\n      });\n    }\n  }, [uncheck]);\n  React.useEffect(function () {\n    var index = values.findIndex(function (ele) {\n      return ele.value === badgeValue;\n    });\n    handlers.setItemProp(index, \"checked\", false);\n  }, [badgeValue]);\n  var handleCheck = function handleCheck(value, type) {\n    var tempFilters = _objectSpread({}, filters);\n    tempFilters[type] = [].concat(_toConsumableArray(tempFilters[type]), [value]);\n    setFilters(tempFilters);\n  };\n  var handleUncheck = function handleUncheck(value, type) {\n    var tempFilters = _objectSpread({}, filters);\n    var index = tempFilters[type].indexOf(value);\n    if (index > -1) {\n      tempFilters[type].splice(index, 1);\n    }\n    setFilters(tempFilters);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    className: \"filter-radio-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, label), values.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      mt: \"xs\",\n      ml: 33,\n      size: \"md\",\n      color: \"dark\",\n      value: item.value,\n      label: item.value,\n      className: \"filter-radio-select\",\n      key: item.value,\n      checked: item.checked,\n      onChange: function onChange(event) {\n        /* Set the filter array */\n        event.currentTarget.checked ? handleCheck(type !== \"price\" ? item.value : index, type) : handleUncheck(type !== \"price\" ? item.value : index, type);\n\n        /* set checked value of checkbox */\n        handlers.setItemProp(index, \"checked\", event.currentTarget.checked);\n\n        /* uncheck all if clear button is clicked ! */\n        event.currentTarget.checked && setUnCheck(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    });\n  }));\n}","map":{"version":3,"names":["React","Text","Checkbox","useListState","CheckBoxes","_ref","_this","items","label","filters","setFilters","uncheck","setUnCheck","badgeValue","type","_useListState","_useListState2","_slicedToArray","values","handlers","useEffect","setState","current","map","value","_objectSpread","checked","index","findIndex","ele","setItemProp","handleCheck","tempFilters","concat","_toConsumableArray","handleUncheck","indexOf","splice","createElement","Fragment","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","item","mt","ml","size","color","key","onChange","event","currentTarget"],"sources":["/home/hoanganh/Desktop/MTAlock/MTAlock/Client/src/component/general/checkBoxGroup.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Text, Checkbox } from \"@mantine/core\";\r\nimport { useListState } from \"@mantine/hooks\";\r\nimport \"../../css/filterForm.css\";\r\n\r\nexport default function CheckBoxes({\r\n    items,\r\n    label,\r\n    filters,\r\n    setFilters,\r\n    uncheck,\r\n    setUnCheck,\r\n    badgeValue,\r\n    type,\r\n}) {\r\n    const [values, handlers] = useListState(items);\r\n    React.useEffect(() => {\r\n        if (uncheck) {\r\n            handlers.setState((current) =>\r\n                current.map((value) => ({ ...value, checked: false }))\r\n            );\r\n        }\r\n    }, [uncheck]);\r\n\r\n    React.useEffect(() => {\r\n        let index = values.findIndex((ele) => ele.value === badgeValue);\r\n        handlers.setItemProp(index, \"checked\", false);\r\n    }, [badgeValue]);\r\n\r\n    const handleCheck = (value, type) => {\r\n        let tempFilters = { ...filters };\r\n        tempFilters[type] = [...tempFilters[type], value];\r\n        setFilters(tempFilters);\r\n    };\r\n\r\n    const handleUncheck = (value, type) => {\r\n        let tempFilters = { ...filters };\r\n        const index = tempFilters[type].indexOf(value);\r\n        if (index > -1) {\r\n            tempFilters[type].splice(index, 1);\r\n        }\r\n        setFilters(tempFilters);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Text className=\"filter-radio-title\">{label}</Text>\r\n            {values.map((item, index) => {\r\n                return (\r\n                    <Checkbox\r\n                        mt=\"xs\"\r\n                        ml={33}\r\n                        size=\"md\"\r\n                        color=\"dark\"\r\n                        value={item.value}\r\n                        label={item.value}\r\n                        className=\"filter-radio-select\"\r\n                        key={item.value}\r\n                        checked={item.checked}\r\n                        onChange={(event) => {\r\n                            /* Set the filter array */\r\n                            event.currentTarget.checked\r\n                                ? handleCheck(\r\n                                      type !== \"price\" ? item.value : index,\r\n                                      type\r\n                                  )\r\n                                : handleUncheck(\r\n                                      type !== \"price\" ? item.value : index,\r\n                                      type\r\n                                  );\r\n\r\n                            /* set checked value of checkbox */\r\n                            handlers.setItemProp(\r\n                                index,\r\n                                \"checked\",\r\n                                event.currentTarget.checked\r\n                            );\r\n\r\n                            /* uncheck all if clear button is clicked ! */\r\n                            event.currentTarget.checked && setUnCheck(false);\r\n                        }}\r\n                    />\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}