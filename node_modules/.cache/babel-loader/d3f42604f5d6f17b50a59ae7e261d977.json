{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\HoangAnh\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\MTA\\\\MTAlock\\\\MTAlock\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\HoangAnh\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\MTA\\\\MTAlock\\\\MTAlock\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\HoangAnh\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\MTA\\\\MTAlock\\\\MTAlock\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HoangAnh\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\MTA\\\\MTAlock\\\\MTAlock\\\\Client\\\\src\\\\component\\\\general\\\\checkBoxGroup.jsx\";\nimport React from \"react\";\nimport { Text, Checkbox } from \"@mantine/core\";\nimport { useListState } from \"@mantine/hooks\";\nimport \"../../css/filterForm.css\";\nexport default function CheckBoxes(_ref) {\n  var _this = this;\n  var items = _ref.items,\n    label = _ref.label,\n    filters = _ref.filters,\n    setFilters = _ref.setFilters,\n    uncheck = _ref.uncheck,\n    setUnCheck = _ref.setUnCheck,\n    badgeValue = _ref.badgeValue,\n    type = _ref.type;\n  var _useListState = useListState(items),\n    _useListState2 = _slicedToArray(_useListState, 2),\n    values = _useListState2[0],\n    handlers = _useListState2[1];\n  React.useEffect(function () {\n    if (uncheck) {\n      handlers.setState(function (current) {\n        return current.map(function (value) {\n          return _objectSpread({}, value, {\n            checked: false\n          });\n        });\n      });\n    }\n  }, [uncheck]);\n  React.useEffect(function () {\n    var index = values.findIndex(function (ele) {\n      return ele.value === badgeValue;\n    });\n    handlers.setItemProp(index, \"checked\", false);\n  }, [badgeValue]);\n  var handleCheck = function handleCheck(value, type) {\n    var tempFilters = _objectSpread({}, filters);\n    tempFilters[type] = [].concat(_toConsumableArray(tempFilters[type]), [value]);\n    setFilters(tempFilters);\n  };\n  var handleUncheck = function handleUncheck(value, type) {\n    var tempFilters = _objectSpread({}, filters);\n    var index = tempFilters[type].indexOf(value);\n    if (index > -1) {\n      tempFilters[type].splice(index, 1);\n    }\n    setFilters(tempFilters);\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Text, {\n    className: \"filter-radio-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, label), values.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      mt: \"xs\",\n      ml: 33,\n      size: \"md\",\n      color: \"dark\",\n      value: item.value,\n      label: item.value,\n      className: \"filter-radio-select\",\n      key: item.value,\n      checked: item.checked,\n      onChange: function onChange(event) {\n        /* Set the filter array */\n        event.currentTarget.checked ? handleCheck(type !== \"price\" ? item.value : index, type) : handleUncheck(type !== \"price\" ? item.value : index, type);\n\n        /* set checked value of checkbox */\n        handlers.setItemProp(index, \"checked\", event.currentTarget.checked);\n\n        /* uncheck all if clear button is clicked ! */\n        event.currentTarget.checked && setUnCheck(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    });\n  }));\n}","map":{"version":3,"names":["React","Text","Checkbox","useListState","CheckBoxes","items","label","filters","setFilters","uncheck","setUnCheck","badgeValue","type","values","handlers","useEffect","setState","current","map","value","checked","index","findIndex","ele","setItemProp","handleCheck","tempFilters","handleUncheck","indexOf","splice","item","event","currentTarget"],"sources":["C:/Users/HoangAnh/OneDrive/Máy tính/MTA/MTAlock/MTAlock/Client/src/component/general/checkBoxGroup.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Text, Checkbox } from \"@mantine/core\";\r\nimport { useListState } from \"@mantine/hooks\";\r\nimport \"../../css/filterForm.css\";\r\n\r\nexport default function CheckBoxes({\r\n    items,\r\n    label,\r\n    filters,\r\n    setFilters,\r\n    uncheck,\r\n    setUnCheck,\r\n    badgeValue,\r\n    type,\r\n}) {\r\n    const [values, handlers] = useListState(items);\r\n    React.useEffect(() => {\r\n        if (uncheck) {\r\n            handlers.setState((current) =>\r\n                current.map((value) => ({ ...value, checked: false }))\r\n            );\r\n        }\r\n    }, [uncheck]);\r\n\r\n    React.useEffect(() => {\r\n        let index = values.findIndex((ele) => ele.value === badgeValue);\r\n        handlers.setItemProp(index, \"checked\", false);\r\n    }, [badgeValue]);\r\n\r\n    const handleCheck = (value, type) => {\r\n        let tempFilters = { ...filters };\r\n        tempFilters[type] = [...tempFilters[type], value];\r\n        setFilters(tempFilters);\r\n    };\r\n\r\n    const handleUncheck = (value, type) => {\r\n        let tempFilters = { ...filters };\r\n        const index = tempFilters[type].indexOf(value);\r\n        if (index > -1) {\r\n            tempFilters[type].splice(index, 1);\r\n        }\r\n        setFilters(tempFilters);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Text className=\"filter-radio-title\">{label}</Text>\r\n            {values.map((item, index) => {\r\n                return (\r\n                    <Checkbox\r\n                        mt=\"xs\"\r\n                        ml={33}\r\n                        size=\"md\"\r\n                        color=\"dark\"\r\n                        value={item.value}\r\n                        label={item.value}\r\n                        className=\"filter-radio-select\"\r\n                        key={item.value}\r\n                        checked={item.checked}\r\n                        onChange={(event) => {\r\n                            /* Set the filter array */\r\n                            event.currentTarget.checked\r\n                                ? handleCheck(\r\n                                      type !== \"price\" ? item.value : index,\r\n                                      type\r\n                                  )\r\n                                : handleUncheck(\r\n                                      type !== \"price\" ? item.value : index,\r\n                                      type\r\n                                  );\r\n\r\n                            /* set checked value of checkbox */\r\n                            handlers.setItemProp(\r\n                                index,\r\n                                \"checked\",\r\n                                event.currentTarget.checked\r\n                            );\r\n\r\n                            /* uncheck all if clear button is clicked ! */\r\n                            event.currentTarget.checked && setUnCheck(false);\r\n                        }}\r\n                    />\r\n                );\r\n            })}\r\n        </>\r\n    );\r\n}\r\n"],"mappings":";;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,QAAQ,QAAQ,eAAe;AAC9C,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAO,0BAA0B;AAEjC,eAAe,SAASC,UAAU,OAS/B;EAAA;EAAA,IARCC,KAAK,QAALA,KAAK;IACLC,KAAK,QAALA,KAAK;IACLC,OAAO,QAAPA,OAAO;IACPC,UAAU,QAAVA,UAAU;IACVC,OAAO,QAAPA,OAAO;IACPC,UAAU,QAAVA,UAAU;IACVC,UAAU,QAAVA,UAAU;IACVC,IAAI,QAAJA,IAAI;EAAA,oBAEuBT,YAAY,CAACE,KAAK,CAAC;IAAA;IAAvCQ,MAAM;IAAEC,QAAQ;EACvBd,KAAK,CAACe,SAAS,CAAC,YAAM;IAClB,IAAIN,OAAO,EAAE;MACTK,QAAQ,CAACE,QAAQ,CAAC,UAACC,OAAO;QAAA,OACtBA,OAAO,CAACC,GAAG,CAAC,UAACC,KAAK;UAAA,yBAAWA,KAAK;YAAEC,OAAO,EAAE;UAAK;QAAA,CAAG,CAAC;MAAA,EACzD;IACL;EACJ,CAAC,EAAE,CAACX,OAAO,CAAC,CAAC;EAEbT,KAAK,CAACe,SAAS,CAAC,YAAM;IAClB,IAAIM,KAAK,GAAGR,MAAM,CAACS,SAAS,CAAC,UAACC,GAAG;MAAA,OAAKA,GAAG,CAACJ,KAAK,KAAKR,UAAU;IAAA,EAAC;IAC/DG,QAAQ,CAACU,WAAW,CAACH,KAAK,EAAE,SAAS,EAAE,KAAK,CAAC;EACjD,CAAC,EAAE,CAACV,UAAU,CAAC,CAAC;EAEhB,IAAMc,WAAW,GAAG,SAAdA,WAAW,CAAIN,KAAK,EAAEP,IAAI,EAAK;IACjC,IAAIc,WAAW,qBAAQnB,OAAO,CAAE;IAChCmB,WAAW,CAACd,IAAI,CAAC,gCAAOc,WAAW,CAACd,IAAI,CAAC,IAAEO,KAAK,EAAC;IACjDX,UAAU,CAACkB,WAAW,CAAC;EAC3B,CAAC;EAED,IAAMC,aAAa,GAAG,SAAhBA,aAAa,CAAIR,KAAK,EAAEP,IAAI,EAAK;IACnC,IAAIc,WAAW,qBAAQnB,OAAO,CAAE;IAChC,IAAMc,KAAK,GAAGK,WAAW,CAACd,IAAI,CAAC,CAACgB,OAAO,CAACT,KAAK,CAAC;IAC9C,IAAIE,KAAK,GAAG,CAAC,CAAC,EAAE;MACZK,WAAW,CAACd,IAAI,CAAC,CAACiB,MAAM,CAACR,KAAK,EAAE,CAAC,CAAC;IACtC;IACAb,UAAU,CAACkB,WAAW,CAAC;EAC3B,CAAC;EAED,oBACI,uDACI,oBAAC,IAAI;IAAC,SAAS,EAAC,oBAAoB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAAEpB,KAAK,CAAQ,EAClDO,MAAM,CAACK,GAAG,CAAC,UAACY,IAAI,EAAET,KAAK,EAAK;IACzB,oBACI,oBAAC,QAAQ;MACL,EAAE,EAAC,IAAI;MACP,EAAE,EAAE,EAAG;MACP,IAAI,EAAC,IAAI;MACT,KAAK,EAAC,MAAM;MACZ,KAAK,EAAES,IAAI,CAACX,KAAM;MAClB,KAAK,EAAEW,IAAI,CAACX,KAAM;MAClB,SAAS,EAAC,qBAAqB;MAC/B,GAAG,EAAEW,IAAI,CAACX,KAAM;MAChB,OAAO,EAAEW,IAAI,CAACV,OAAQ;MACtB,QAAQ,EAAE,kBAACW,KAAK,EAAK;QACjB;QACAA,KAAK,CAACC,aAAa,CAACZ,OAAO,GACrBK,WAAW,CACPb,IAAI,KAAK,OAAO,GAAGkB,IAAI,CAACX,KAAK,GAAGE,KAAK,EACrCT,IAAI,CACP,GACDe,aAAa,CACTf,IAAI,KAAK,OAAO,GAAGkB,IAAI,CAACX,KAAK,GAAGE,KAAK,EACrCT,IAAI,CACP;;QAEP;QACAE,QAAQ,CAACU,WAAW,CAChBH,KAAK,EACL,SAAS,EACTU,KAAK,CAACC,aAAa,CAACZ,OAAO,CAC9B;;QAED;QACAW,KAAK,CAACC,aAAa,CAACZ,OAAO,IAAIV,UAAU,CAAC,KAAK,CAAC;MACpD,CAAE;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EACJ;EAEV,CAAC,CAAC,CACH;AAEX"},"metadata":{},"sourceType":"module"}